                            | #######################################################################
                            | # Test for copying block of size 63;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f42805000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f23f00000000000000 | 	irmovq $63, %rdx		# src and dst have 63 elements
0x014: 30f6a802000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f79800000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
0x032: 30f00000000000000000 | 	irmovq $0,%rax		# count = 0;
0x03c: 6222                 | 	andq %rdx,%rdx		# len <= 0?
0x03e: 719700000000000000   | 	jle Done		# if so, goto Done:
                            | 
0x047: 50a70000000000000000 | Loop:	mrmovq (%rdi), %r10	# read val from src...
0x051: 40a60000000000000000 | 	rmmovq %r10, (%rsi)	# ...and store it to dst
0x05b: 62aa                 | 	andq %r10, %r10		# val <= 0?
0x05d: 717200000000000000   | 	jle Npos		# if so, goto Npos:
0x066: 30fa0100000000000000 | 	irmovq $1, %r10
0x070: 60a0                 | 	addq %r10, %rax		# count++
0x072: 30fa0100000000000000 | Npos:	irmovq $1, %r10
0x07c: 61a2                 | 	subq %r10, %rdx		# len--
0x07e: 30fa0800000000000000 | 	irmovq $8, %r10
0x088: 60a7                 | 	addq %r10, %rdi		# src++
0x08a: 60a6                 | 	addq %r10, %rsi		# dst++
0x08c: 6222                 | 	andq %rdx,%rdx		# len > 0?
0x08e: 764700000000000000   | 	jg Loop			# if so, goto Loop:
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x097:                      | Done:
0x097: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x098:                      | End:
                            | #/* $end ncopy-ys */
0x098:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x098:                      | 	.align 8
0x098:                      | src:
0x098: 0100000000000000     | 	.quad 1
0x0a0: 0200000000000000     | 	.quad 2
0x0a8: fdffffffffffffff     | 	.quad -3
0x0b0: fcffffffffffffff     | 	.quad -4
0x0b8: fbffffffffffffff     | 	.quad -5
0x0c0: faffffffffffffff     | 	.quad -6
0x0c8: f9ffffffffffffff     | 	.quad -7
0x0d0: 0800000000000000     | 	.quad 8
0x0d8: 0900000000000000     | 	.quad 9
0x0e0: 0a00000000000000     | 	.quad 10
0x0e8: f5ffffffffffffff     | 	.quad -11
0x0f0: 0c00000000000000     | 	.quad 12
0x0f8: 0d00000000000000     | 	.quad 13
0x100: f2ffffffffffffff     | 	.quad -14
0x108: 0f00000000000000     | 	.quad 15
0x110: f0ffffffffffffff     | 	.quad -16
0x118: 1100000000000000     | 	.quad 17
0x120: 1200000000000000     | 	.quad 18
0x128: edffffffffffffff     | 	.quad -19
0x130: ecffffffffffffff     | 	.quad -20
0x138: 1500000000000000     | 	.quad 21
0x140: eaffffffffffffff     | 	.quad -22
0x148: 1700000000000000     | 	.quad 23
0x150: e8ffffffffffffff     | 	.quad -24
0x158: e7ffffffffffffff     | 	.quad -25
0x160: 1a00000000000000     | 	.quad 26
0x168: e5ffffffffffffff     | 	.quad -27
0x170: 1c00000000000000     | 	.quad 28
0x178: 1d00000000000000     | 	.quad 29
0x180: 1e00000000000000     | 	.quad 30
0x188: 1f00000000000000     | 	.quad 31
0x190: 2000000000000000     | 	.quad 32
0x198: 2100000000000000     | 	.quad 33
0x1a0: 2200000000000000     | 	.quad 34
0x1a8: 2300000000000000     | 	.quad 35
0x1b0: 2400000000000000     | 	.quad 36
0x1b8: 2500000000000000     | 	.quad 37
0x1c0: daffffffffffffff     | 	.quad -38
0x1c8: d9ffffffffffffff     | 	.quad -39
0x1d0: d8ffffffffffffff     | 	.quad -40
0x1d8: d7ffffffffffffff     | 	.quad -41
0x1e0: 2a00000000000000     | 	.quad 42
0x1e8: d5ffffffffffffff     | 	.quad -43
0x1f0: 2c00000000000000     | 	.quad 44
0x1f8: 2d00000000000000     | 	.quad 45
0x200: 2e00000000000000     | 	.quad 46
0x208: 2f00000000000000     | 	.quad 47
0x210: 3000000000000000     | 	.quad 48
0x218: cfffffffffffffff     | 	.quad -49
0x220: ceffffffffffffff     | 	.quad -50
0x228: 3300000000000000     | 	.quad 51
0x230: ccffffffffffffff     | 	.quad -52
0x238: cbffffffffffffff     | 	.quad -53
0x240: 3600000000000000     | 	.quad 54
0x248: c9ffffffffffffff     | 	.quad -55
0x250: c8ffffffffffffff     | 	.quad -56
0x258: c7ffffffffffffff     | 	.quad -57
0x260: c6ffffffffffffff     | 	.quad -58
0x268: c5ffffffffffffff     | 	.quad -59
0x270: c4ffffffffffffff     | 	.quad -60
0x278: c3ffffffffffffff     | 	.quad -61
0x280: c2ffffffffffffff     | 	.quad -62
0x288: c1ffffffffffffff     | 	.quad -63
0x290: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x2a0:                      | 	.align 16
0x2a0:                      | Predest:
0x2a0: fadebc0000000000     | 	.quad 0xbcdefa
0x2a8:                      | dest:
0x2a8: abefcd0000000000     | 	.quad 0xcdefab
0x2b0: abefcd0000000000     | 	.quad 0xcdefab
0x2b8: abefcd0000000000     | 	.quad 0xcdefab
0x2c0: abefcd0000000000     | 	.quad 0xcdefab
0x2c8: abefcd0000000000     | 	.quad 0xcdefab
0x2d0: abefcd0000000000     | 	.quad 0xcdefab
0x2d8: abefcd0000000000     | 	.quad 0xcdefab
0x2e0: abefcd0000000000     | 	.quad 0xcdefab
0x2e8: abefcd0000000000     | 	.quad 0xcdefab
0x2f0: abefcd0000000000     | 	.quad 0xcdefab
0x2f8: abefcd0000000000     | 	.quad 0xcdefab
0x300: abefcd0000000000     | 	.quad 0xcdefab
0x308: abefcd0000000000     | 	.quad 0xcdefab
0x310: abefcd0000000000     | 	.quad 0xcdefab
0x318: abefcd0000000000     | 	.quad 0xcdefab
0x320: abefcd0000000000     | 	.quad 0xcdefab
0x328: abefcd0000000000     | 	.quad 0xcdefab
0x330: abefcd0000000000     | 	.quad 0xcdefab
0x338: abefcd0000000000     | 	.quad 0xcdefab
0x340: abefcd0000000000     | 	.quad 0xcdefab
0x348: abefcd0000000000     | 	.quad 0xcdefab
0x350: abefcd0000000000     | 	.quad 0xcdefab
0x358: abefcd0000000000     | 	.quad 0xcdefab
0x360: abefcd0000000000     | 	.quad 0xcdefab
0x368: abefcd0000000000     | 	.quad 0xcdefab
0x370: abefcd0000000000     | 	.quad 0xcdefab
0x378: abefcd0000000000     | 	.quad 0xcdefab
0x380: abefcd0000000000     | 	.quad 0xcdefab
0x388: abefcd0000000000     | 	.quad 0xcdefab
0x390: abefcd0000000000     | 	.quad 0xcdefab
0x398: abefcd0000000000     | 	.quad 0xcdefab
0x3a0: abefcd0000000000     | 	.quad 0xcdefab
0x3a8: abefcd0000000000     | 	.quad 0xcdefab
0x3b0: abefcd0000000000     | 	.quad 0xcdefab
0x3b8: abefcd0000000000     | 	.quad 0xcdefab
0x3c0: abefcd0000000000     | 	.quad 0xcdefab
0x3c8: abefcd0000000000     | 	.quad 0xcdefab
0x3d0: abefcd0000000000     | 	.quad 0xcdefab
0x3d8: abefcd0000000000     | 	.quad 0xcdefab
0x3e0: abefcd0000000000     | 	.quad 0xcdefab
0x3e8: abefcd0000000000     | 	.quad 0xcdefab
0x3f0: abefcd0000000000     | 	.quad 0xcdefab
0x3f8: abefcd0000000000     | 	.quad 0xcdefab
0x400: abefcd0000000000     | 	.quad 0xcdefab
0x408: abefcd0000000000     | 	.quad 0xcdefab
0x410: abefcd0000000000     | 	.quad 0xcdefab
0x418: abefcd0000000000     | 	.quad 0xcdefab
0x420: abefcd0000000000     | 	.quad 0xcdefab
0x428: abefcd0000000000     | 	.quad 0xcdefab
0x430: abefcd0000000000     | 	.quad 0xcdefab
0x438: abefcd0000000000     | 	.quad 0xcdefab
0x440: abefcd0000000000     | 	.quad 0xcdefab
0x448: abefcd0000000000     | 	.quad 0xcdefab
0x450: abefcd0000000000     | 	.quad 0xcdefab
0x458: abefcd0000000000     | 	.quad 0xcdefab
0x460: abefcd0000000000     | 	.quad 0xcdefab
0x468: abefcd0000000000     | 	.quad 0xcdefab
0x470: abefcd0000000000     | 	.quad 0xcdefab
0x478: abefcd0000000000     | 	.quad 0xcdefab
0x480: abefcd0000000000     | 	.quad 0xcdefab
0x488: abefcd0000000000     | 	.quad 0xcdefab
0x490: abefcd0000000000     | 	.quad 0xcdefab
0x498: abefcd0000000000     | 	.quad 0xcdefab
0x4a0:                      | Postdest:
0x4a0: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x4a8:                      | .align 8
                            | # Run time stack
0x4a8: 0000000000000000     | 	.quad 0
0x4b0: 0000000000000000     | 	.quad 0
0x4b8: 0000000000000000     | 	.quad 0
0x4c0: 0000000000000000     | 	.quad 0
0x4c8: 0000000000000000     | 	.quad 0
0x4d0: 0000000000000000     | 	.quad 0
0x4d8: 0000000000000000     | 	.quad 0
0x4e0: 0000000000000000     | 	.quad 0
0x4e8: 0000000000000000     | 	.quad 0
0x4f0: 0000000000000000     | 	.quad 0
0x4f8: 0000000000000000     | 	.quad 0
0x500: 0000000000000000     | 	.quad 0
0x508: 0000000000000000     | 	.quad 0
0x510: 0000000000000000     | 	.quad 0
0x518: 0000000000000000     | 	.quad 0
0x520: 0000000000000000     | 	.quad 0
                            | 
0x528:                      | Stack:
